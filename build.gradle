task wrapper(type: Wrapper) {
	gradleVersion = '2.14'
}

// allprojects means this configuration
// will be inherited by the root project and all subprojects
allprojects {
	// Artifact ID of the project
	group 'com.serverlessarchitecture'
	// Project version
	version '1.0'
	// Gradle Java plugin needed for Java support
	apply plugin: 'java'
	// Specify the version of java
	sourceCompatibility = 1.8
}

allprojects {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://jitpack.io"
		}
	}
}

// Need dependencies for the build script
buildscript {
	repositories {
		mavenCentral()
		jcenter()
		maven {
			url "https://jitpack.io"
		}
	}

	dependencies {
		classpath "com.github.jengelman.gradle.plugins:shadow:1.2.3"
		classpath "jp.classmethod.aws:gradle-aws-plugin:0.+"
	}
}

allprojects {
	apply plugin: "jp.classmethod.aws"
	aws {
		region = "us-east-1"
	}
}

allprojects {
	dependencies {
		testCompile group: 'junit', name: 'junit', version: '4.11'
	}
}

def deploymentBucketName = "serverless-book-mgrabau-${aws.region}"
def deploymentTime = new java.text.SimpleDateFormat("yyyyMMddHHmmss").format(new Date());

allprojects {
	apply plugin: "jp.classmethod.aws.s3"
	task createDeploymentBucket(type: jp.classmethod.aws.gradle.s3.CreateBucketTask) {
		bucketName deploymentBucketName
		ifNotExists true
	}
}

configure(subprojects.findAll()) {
	if (it.name.startsWith("lambda-")) {
		dependencies {
			compile project(':lambda')
		}

		apply plugin: "com.github.johnrengelman.shadow"
		build.finalizedBy shadowJar
	}
}
